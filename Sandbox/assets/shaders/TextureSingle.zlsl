// Basic Texture Shader

type vertex
version 330 core

layout(location = 0) in vec3 a_Position as Z_Position;
layout(location = 1) in vec2 a_TexCoord as Z_Texcoord;

uniform mat4 u_ViewProjection;
uniform mat4 u_Transform;

out vec4 v_Position as Z_Position;
out vec2 v_TexCoord as Z_Texcoord;

function void main()
{

	v_TexCoord = a_TexCoord;
	v_Position = Z_Mul(u_ViewProjection * u_Transform , vec4(a_Position, 1.0));	
	Z_Return(v_Position);
}

type fragment
version 330 core

layout(location = 0) out vec4 color as ZColor;

in vec4 Z_Position;
in vec2 v_TexCoord;

uniform sampler2D u_Texture;

function void main()
{
	color = texture(u_Texture, v_TexCoord);
	Z_Return(color);
	
}