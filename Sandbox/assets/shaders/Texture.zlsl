// Basic Texture Shader

type vertex
version 330 core

layout(location = 0) in vec3 a_Position as Z_Position;
layout(location = 1) in vec4 a_Color as Z_Color;
layout(location = 2) in vec2 a_TexCoord as Z_Texcoord;
layout(location = 3) in float a_TexIndex as Z_Size;
layout(location = 4) in float a_TilingFactor as Z_Blendweight;

uniform mat4 u_ViewProjection;

out vec4 v_Position as Z_Position;
out vec4 v_Color as Z_Color;
out vec2 v_TexCoord as Z_Texcoord;
out float v_TexIndex as Z_Size;
out float v_TilingFactor as Z_Blendweight;

function void main()
{
	
	v_Color = a_Color;
	v_TexCoord = a_TexCoord;
	v_TexIndex = a_TexIndex;
	v_TilingFactor = a_TilingFactor;
	v_Position = vec4(a_Position,1.0);
	v_Position = Z_Mul(u_ViewProjection, v_Position);
	Z_Return(v_Position);
}

type fragment
version 330 core

layout(location = 0) out vec4 color as ZColor;

in vec4 v_Color;
in vec2 v_TexCoord;
in float v_TexIndex;
in float v_TilingFactor;

uniform sampler2D u_Textures;

function void main()
{
	//color = v_Color;
	color = texture(u_Textures, v_TexCoord * v_TilingFactor) * v_Color;
	Z_Return(color);
}